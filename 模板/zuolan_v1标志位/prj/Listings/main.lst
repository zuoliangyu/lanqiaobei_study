C51 COMPILER V9.60.7.0   MAIN                                                              02/07/2025 11:55:29 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\user\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\driver;..\user) DEBUG 
                    -OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          /* LED与数码管 */
   3          unsigned char ucLed[8] = {0, 0, 0, 0, 0, 0, 0, 0};
   4          unsigned char Seg_Pos;
   5          unsigned char Seg_Buf[8] = {10, 10, 10, 10, 10, 10, 10, 10};
   6          unsigned char Seg_Point[8] = {0, 0, 0, 0, 0, 0, 0, 0};
   7          
   8          /* 串口数据*/
   9          unsigned char Uart_Buf[10];
  10          unsigned char Uart_Rx_Index;
  11          bit Uart_flag;
  12          unsigned char Sys_Tick;
  13          /* 时间*/
  14          unsigned char ucRtc[3] = {11, 11, 11};
  15          unsigned int time_all_1s;
  16          
  17          /* 数据 */
  18          unsigned int Freq;
  19          
  20          void Data_Proc() {
  21   1        if (time_all_1s % 50 == 0) {
  22   2          // 时间读取
  23   2        }
  24   1        if (time_all_1s % 100 == 0) {
  25   2          // AD读取
  26   2        }
  27   1        if (time_all_1s % 500 == 0) {
  28   2          // 温度读取
  29   2        }
  30   1      }
  31          /* 键盘处理*/
  32          void Key_Proc() {
  33   1        static unsigned char Key_Val, Key_Down, Key_Up, Key_Old;
  34   1        if (time_all_1s % 10) return;
  35   1        Key_Val = Key_Read();
  36   1        Key_Down = Key_Val & (Key_Old ^ Key_Val);
  37   1        Key_Up = ~Key_Val & (Key_Old ^ Key_Val);
  38   1        Key_Old = Key_Val;
  39   1      }
  40          
  41          /* 数码管处理*/
  42          void Seg_Proc() {
  43   1        if (time_all_1s % 20) return;
  44   1      }
  45          void Led_Proc() {}
  46          void Uart_Proc() {
  47   1        if (Uart_Rx_Index == 0) return;
  48   1        if (Sys_Tick >= 10) {
  49   2          Sys_Tick = Uart_flag = 0;
  50   2      
  51   2          memset(Uart_Buf, 0, Uart_Rx_Index);
  52   2          Uart_Rx_Index = 0;
  53   2        }
  54   1      }
C51 COMPILER V9.60.7.0   MAIN                                                              02/07/2025 11:55:29 PAGE 2   

  55          void Timer0_Init(void)  // 1毫秒@12.000MHz
  56          {
  57   1        AUXR &= 0x7F;  // 定时器时钟12T模式
  58   1        TMOD &= 0xF0;  // 设置定时器模式
  59   1        TMOD |= 0x05;
  60   1        TL0 = 0;  // 设置定时初始值
  61   1        TH0 = 0;  // 设置定时初始值
  62   1        TF0 = 0;  // 清除TF0标志
  63   1        TR0 = 1;  // 定时器0开始计时
  64   1        EA = 1;
  65   1      }
  66          
  67          void Timer1_Init(void)  // 1毫秒@12.000MHz
  68          {
  69   1        AUXR &= 0xBF;  // 定时器时钟12T模式
  70   1        TMOD &= 0x0F;  // 设置定时器模式
  71   1        TL1 = 0x18;    // 设置定时初始值
  72   1        TH1 = 0xFC;    // 设置定时初始值
  73   1        TF1 = 0;       // 清除TF1标志
  74   1        TR1 = 1;       // 定时器1开始计时
  75   1        ET1 = 1;       // 使能定时器1中断
  76   1        EA = 1;
  77   1      }
  78          
  79          void Timer1_Isr(void) interrupt 3 {
  80   1        unsigned char i;
  81   1        if (++time_all_1s == 1000) {
  82   2          time_all_1s = 0;
  83   2          Freq = TH0 << 8 | TL0;
  84   2          TH0 = TL0 = 0;
  85   2        }
  86   1        if (Uart_flag) Sys_Tick++;
  87   1        Seg_Pos = (++Seg_Pos) % 8;
  88   1        Seg_Disp(Seg_Pos, Seg_Buf[Seg_Pos], Seg_Point[Seg_Pos]);
  89   1        for (i = 0; i < 8; i++) Led_Disp(i, ucLed[i]);
  90   1      }
  91          void Uart1_Isr(void) interrupt 4 {
  92   1        if (RI) {
  93   2          Uart_flag = 1;
  94   2          Sys_Tick = 0;
  95   2          Uart_Buf[Uart_Rx_Index] = SBUF;
  96   2          Uart_Rx_Index++;
  97   2          RI = 0;
  98   2        }
  99   1        if (Uart_Rx_Index > 10) Uart_Rx_Index = 0;
 100   1      }
 101          void Delay750ms(void)  //@12.000MHz
 102          {
 103   1        unsigned char data i, j, k;
 104   1      
 105   1        _nop_();
 106   1        _nop_();
 107   1        i = 35;
 108   1        j = 51;
 109   1        k = 182;
 110   1        do {
 111   2          do {
 112   3            while (--k);
 113   3          } while (--j);
 114   2        } while (--i);
 115   1      }
 116          
C51 COMPILER V9.60.7.0   MAIN                                                              02/07/2025 11:55:29 PAGE 3   

 117          void main() {
 118   1        System_Init();
 119   1        Timer0_Init();
 120   1        Timer1_Init();
 121   1        Set_Rtc(ucRtc);
 122   1        rd_temperature();
 123   1        Delay750ms();
 124   1        while (1) {
 125   2          Data_Proc();
 126   2          Key_Proc();
 127   2          Seg_Proc();
 128   2          Uart_Proc();
 129   2          Led_Proc();
 130   2        }
 131   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    366    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
