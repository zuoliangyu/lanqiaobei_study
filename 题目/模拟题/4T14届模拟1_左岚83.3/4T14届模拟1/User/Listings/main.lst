C51 COMPILER V9.59.0.0   MAIN                                                              04/06/2024 10:33:42 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "main.h"
   2          /* LED显示 */
   3          uchar ucLed[8] = {0, 0, 0, 0, 0, 0, 0, 0};
   4          
   5          /* 数码管显示 */
   6          uchar Seg_Slow_Down;                                 // 数码管减速
   7          uchar Seg_Buf[8] = {10, 10, 10, 10, 10, 10, 10, 10}; // 数码管显示的值
   8          uchar Seg_Pos;                                       // 数码管指示
   9          uchar Seg_Point[8] = {0, 0, 0, 0, 0, 0, 0, 0};       // 某位是否显示小数点
  10          
  11          /* 键盘方面 */
  12          uchar Key_Slow_Down;
  13          
  14          /* 时间方面 */
  15          uint time_all_1s;
  16          uchar time_200ms;
  17          /* 数据 */
  18          uchar Dis_value;
  19          uchar Dis_para = 30;
  20          /* 显示 */
  21          uchar Seg_show_mode; // 0 距离显示 1 参数显示
  22          
  23          /* 判断 */
  24          bit Send_data_flag;
  25          bit Wring_flag;
  26          bit Led_blink;
  27          /* 数据处理函数 */
  28          void Data_Proc()
  29          {
  30   1          if (time_all_1s % 100 == 0)
  31   1          {
  32   2              // 超声波读取
  33   2              Dis_value = Ut_Wave_Data();
  34   2              if (Dis_value > Dis_para)
  35   2                  Wring_flag = 1;
  36   2              else
  37   2                  Wring_flag = 0;
  38   2          }
  39   1      }
  40          /* 键盘处理函数 */
  41          void Key_Proc()
  42          {
  43   1          static uchar Key_Val, Key_Down, Key_Up, Key_Old;
  44   1          if (time_all_1s % 10)
  45   1              return;
  46   1          Key_Val = Key_Read();
  47   1          Key_Down = Key_Val & (Key_Old ^ Key_Val);
  48   1          Key_Up = ~Key_Val & (Key_Old ^ Key_Val);
  49   1          Key_Old = Key_Val;
  50   1          if (Key_Down == 4)
  51   1              Seg_show_mode = (++Seg_show_mode) % 2;
  52   1          if (Seg_show_mode == 0)
  53   1              if (Key_Down == 8)
  54   1                  Dis_para = Dis_value;
C51 COMPILER V9.59.0.0   MAIN                                                              04/06/2024 10:33:42 PAGE 2   

  55   1          if (Seg_show_mode == 1)
  56   1          {
  57   2              if (Key_Down == 12)
  58   2                  Dis_para = (Dis_para >= 245) ? 255
  59   2                                               : Dis_para + 10;
  60   2              else if (Key_Down == 16)
  61   2                  Dis_para = (Dis_para <= 10) ? 0
  62   2                                              : Dis_para - 10;
  63   2          }
  64   1          if (Key_Down == 9)
  65   1              Send_data_flag = 1;
  66   1      }
  67          /* 数码管处理函数 */
  68          void Seg_Proc()
  69          {
  70   1          uchar i;
  71   1          if (time_all_1s % 100)
  72   1              return;
  73   1          Seg_Buf[0] = 11; // U
  74   1          Seg_Buf[1] = Seg_show_mode + 1;
  75   1          Seg_Buf[2] = Seg_Buf[3] = Seg_Buf[4] = 10;
  76   1          Seg_Buf[5] = (Seg_show_mode == 0) ? Dis_value / 100 % 10
  77   1                                            : Dis_para / 100 % 10;
  78   1          Seg_Buf[6] = (Seg_show_mode == 0) ? Dis_value / 10 % 10
  79   1                                            : Dis_para / 10 % 10;
  80   1          Seg_Buf[7] = (Seg_show_mode == 0) ? Dis_value % 10
  81   1                                            : Dis_para % 10;
  82   1          i = 5;
  83   1          while (i < 7)
  84   1          {
  85   2              if (Seg_Buf[i] == 0 && Seg_Buf[i - 1] == 10)
  86   2                  Seg_Buf[i] = 10;
  87   2              else
  88   2                  break;
  89   2              i++;
  90   2          }
  91   1      }
  92          
  93          /* LED处理函数 */
  94          void Led_Proc()
  95          {
  96   1          ucLed[0] = (Seg_show_mode == 0);
  97   1          ucLed[1] = (Seg_show_mode == 1);
  98   1          ucLed[2] = Led_blink;
  99   1      }
 100          
 101          /* 串口处理函数 */
 102          void Uart_Proc()
 103          {
 104   1          if (time_all_1s % 200)
 105   1              return;
 106   1          if (Send_data_flag)
 107   1          {
 108   2              Send_data_flag = 0;
 109   2              printf("Distance:%bucm", Dis_value);
 110   2          }
 111   1      }
 112          
 113          /* 定时器0中断初始化 */
 114          void Timer0_Init(void) // 1毫秒@12.000MHz
 115          {
 116   1          AUXR &= 0x7F; // 定时器时钟12T模式
C51 COMPILER V9.59.0.0   MAIN                                                              04/06/2024 10:33:42 PAGE 3   

 117   1          TMOD &= 0xF0; // 设置定时器模式
 118   1          TL0 = 0x18;   // 设置定时初始值
 119   1          TH0 = 0xFC;   // 设置定时初始值
 120   1          TF0 = 0;      // 清除TF0标志
 121   1          TR0 = 1;      // 定时器0开始计时
 122   1          ET0 = 1;
 123   1          EA = 1;
 124   1      }
 125          
 126          /* 定时器0中断函数 */
 127          void Timer0_ISR(void) interrupt 1
 128          {
 129   1          if (++time_all_1s == 1000)
 130   1              time_all_1s = 0;
 131   1          if (++Seg_Pos == 8)
 132   1              Seg_Pos = 0;
 133   1          if (Wring_flag)
 134   1          {
 135   2              if (++time_200ms == 200)
 136   2              {
 137   3                  time_200ms = 0;
 138   3                  Led_blink ^= 1;
 139   3              }
 140   2          }
 141   1          else
 142   1          {
 143   2              time_200ms = 0;
 144   2              Led_blink = 0;
 145   2          }
 146   1          Seg_Disp(Seg_Pos, Seg_Buf[Seg_Pos], Seg_Point[Seg_Pos]);
 147   1          Led_Disp(Seg_Pos, ucLed[Seg_Pos]);
 148   1      }
 149          void Uart1_Isr(void) interrupt 4
 150          {
 151   1      }
 152          
 153          void main()
 154          {
 155   1          System_Init();
 156   1          Timer0_Init();
 157   1          Uart1_Init();
 158   1          while (1)
 159   1          {
 160   2              Key_Proc();
 161   2              Data_Proc();
 162   2              Seg_Proc();
 163   2              Uart_Proc();
 164   2              Led_Proc();
 165   2          }
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    579    ----
   CONSTANT SIZE    =     15    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
