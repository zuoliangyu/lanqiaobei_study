C51 COMPILER V9.59.0.0   IIC                                                               03/05/2024 08:31:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE ..\Driver\iic.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\Driver) DEBUG OBJECTE
                    -XTEND PRINT(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          /*
   2            程序说明: IIC总线驱动程序
   3            软件环境: Keil uVision 4.10
   4            硬件环境: CT107单片机综合实训平台 8051，12MHz
   5            日    期: 2011-8-9
   6          */
   7          
   8          #include "iic.h"
   9          
  10          #include "intrins.h"
  11          
  12          #define DELAY_TIME 5
  13          
  14          #define Photo_Res_Channel 0x41
  15          #define Adj_Res_Channel 0x43
  16          
  17          // 总线引脚定义
  18          sbit SDA = P2 ^ 1; /* 数据线 */
  19          sbit SCL = P2 ^ 0; /* 时钟线 */
  20          
  21          void IIC_Delay(unsigned char i)
  22          {
  23   1          do
  24   1          {
  25   2              _nop_();
  26   2          } while (i--);
  27   1      }
  28          
  29          // 总线启动条件
  30          void IIC_Start(void)
  31          {
  32   1          SDA = 1;
  33   1          SCL = 1;
  34   1          IIC_Delay(DELAY_TIME);
  35   1          SDA = 0;
  36   1          IIC_Delay(DELAY_TIME);
  37   1          SCL = 0;
  38   1      }
  39          
  40          // 总线停止条件
  41          void IIC_Stop(void)
  42          {
  43   1          SDA = 0;
  44   1          SCL = 1;
  45   1          IIC_Delay(DELAY_TIME);
  46   1          SDA = 1;
  47   1          IIC_Delay(DELAY_TIME);
  48   1      }
  49          
  50          // 发送应答
  51          void IIC_SendAck(bit ackbit)
  52          {
  53   1          SCL = 0;
  54   1          SDA = ackbit; // 0：应答，1：非应答
C51 COMPILER V9.59.0.0   IIC                                                               03/05/2024 08:31:45 PAGE 2   

  55   1          IIC_Delay(DELAY_TIME);
  56   1          SCL = 1;
  57   1          IIC_Delay(DELAY_TIME);
  58   1          SCL = 0;
  59   1          SDA = 1;
  60   1          IIC_Delay(DELAY_TIME);
  61   1      }
  62          
  63          // 等待应答
  64          bit IIC_WaitAck(void)
  65          {
  66   1          bit ackbit;
  67   1      
  68   1          SCL = 1;
  69   1          IIC_Delay(DELAY_TIME);
  70   1          ackbit = SDA;
  71   1          SCL = 0;
  72   1          IIC_Delay(DELAY_TIME);
  73   1          return ackbit;
  74   1      }
  75          
  76          // 通过I2C总线发送数据
  77          void IIC_SendByte(unsigned char byt)
  78          {
  79   1          unsigned char i;
  80   1      
  81   1          for (i = 0; i < 8; i++)
  82   1          {
  83   2              SCL = 0;
  84   2              IIC_Delay(DELAY_TIME);
  85   2              if (byt & 0x80)
  86   2                  SDA = 1;
  87   2              else
  88   2                  SDA = 0;
  89   2              IIC_Delay(DELAY_TIME);
  90   2              SCL = 1;
  91   2              byt <<= 1;
  92   2              IIC_Delay(DELAY_TIME);
  93   2          }
  94   1          SCL = 0;
  95   1      }
  96          
  97          // 从I2C总线上接收数据
  98          unsigned char IIC_RecByte(void)
  99          {
 100   1          unsigned char i, da;
 101   1          for (i = 0; i < 8; i++)
 102   1          {
 103   2              SCL = 1;
 104   2              IIC_Delay(DELAY_TIME);
 105   2              da <<= 1;
 106   2              if (SDA)
 107   2                  da |= 1;
 108   2              SCL = 0;
 109   2              IIC_Delay(DELAY_TIME);
 110   2          }
 111   1          return da;
 112   1      }
 113          
 114          unsigned char Ad_Read(unsigned char addr)
 115          {
 116   1          unsigned char temp;
C51 COMPILER V9.59.0.0   IIC                                                               03/05/2024 08:31:45 PAGE 3   

 117   1          IIC_Start();
 118   1          IIC_SendByte(0x90);
 119   1          IIC_WaitAck();
 120   1          IIC_SendByte(addr);
 121   1          IIC_WaitAck();
 122   1          IIC_Start();
 123   1          IIC_SendByte(0x91);
 124   1          IIC_WaitAck();
 125   1          temp = IIC_RecByte();
 126   1          IIC_SendAck(1);
 127   1          IIC_Stop();
 128   1          return temp;
 129   1      }
 130          
 131          // 函数名：写EEPROM函数
 132          // 入口参数：需要写入的字符串，写入的地址(务必为8的倍数)，写入数量
 133          // 返回值：无
 134          // 函数功能：向EERPOM的某个地址写入字符串中特定数量的字符。
 135          void EEPROM_Write(unsigned char *EEPROM_String, unsigned char addr, unsigned char num)
 136          {
 137   1          IIC_Start();        // 发送开启信号
 138   1          IIC_SendByte(0xA0); // 选择EEPROM芯片，确定写的模式
 139   1          IIC_WaitAck();      // 等待EEPROM反馈
 140   1      
 141   1          IIC_SendByte(addr); // 写入要存储的数据地址
 142   1          IIC_WaitAck();      // 等待EEPROM反馈
 143   1      
 144   1          while (num--)
 145   1          {
 146   2              IIC_SendByte(*EEPROM_String++); // 将要写入的信息写入
 147   2              IIC_WaitAck();                  // 等待EEPROM反馈
 148   2              IIC_Delay(200);
 149   2          }
 150   1          IIC_Stop(); // 停止发送
 151   1      }
 152          
 153          // 函数名：读EEPROM函数
 154          // 入口参数：读到的数据需要存储的字符串，读取的地址(务必为8的倍数)，读取的数量
 155          // 返回值：无
 156          // 函数功能：读取EERPOM的某个地址中的数据，并存放在字符串数组中。
 157          void EEPROM_Read(unsigned char *EEPROM_String, unsigned char addr, unsigned char num)
 158          {
 159   1          IIC_Start();        // 发送开启信号
 160   1          IIC_SendByte(0xA0); // 选择EEPROM芯片，确定写的模式
 161   1          IIC_WaitAck();      // 等待EEPROM反馈
 162   1      
 163   1          IIC_SendByte(addr); // 写入要读取的数据地址
 164   1          IIC_WaitAck();      // 等待EEPROM反馈
 165   1      
 166   1          IIC_Start();        // 发送开启信号
 167   1          IIC_SendByte(0xA1); // 选择EEPROM芯片，确定读的模式
 168   1          IIC_WaitAck();      // 等待EEPROM反馈
 169   1      
 170   1          while (num--)
 171   1          {
 172   2              *EEPROM_String++ = IIC_RecByte(); // 将要写入的信息写入
 173   2              if (num)
 174   2                  IIC_SendAck(0); // 发送应答
 175   2              else
 176   2                  IIC_SendAck(1); // 不应答
 177   2          }
 178   1      
C51 COMPILER V9.59.0.0   IIC                                                               03/05/2024 08:31:45 PAGE 4   

 179   1          IIC_Stop(); // 停止发送
 180   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    360    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
